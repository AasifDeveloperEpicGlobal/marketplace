import { useCallback, useEffect, useState } from "react";

import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import Router, { useRouter } from "next/router";
import toast, { Toaster } from "react-hot-toast";
import {
  useForgotPassword,
  useGetCompanyProfile,
  useLogin,
} from "../networkAPI/queries";
import { useAppDispatch, useAppSelector } from "../redux/hooks";
import styles from "../styles/Merchant/forgotpassword.module.scss";
import { setUser } from "redux/slices/userSlice";
import Cancel from "components/svg-icons/cancel";
import RightArrowLine from "components/svg-icons/rightarrowline";
import OtpNumber from "components/ForgotPassword/otpnumber";

const OtpPage: NextPage = () => {
  const router = useRouter();
  const dispatch = useAppDispatch();
  const { mutate: login } = useForgotPassword();
  const [email, setEmail] = useState<string>("");
  const [password, setPassword] = useState<string>("");

  const { data: data, error: err } = useGetCompanyProfile();
  const handleLogin = useCallback(
    (e: React.FormEvent<HTMLFormElement>) => {
      e.preventDefault();
      login(
        {
          email,
          password,
        },
        {
          onSuccess: (data: any) => {
            Router.push(`/login`);
          },
        }
      );
      // await axiosInstance.post("/api/logout")
    },
    [email, password, login, dispatch]
  );

  const [showPassword, setshowPassword] = useState(false);
  const showPasswordHandler = useCallback(() => {
    setshowPassword(!showPassword);
  }, [showPassword]);

  //For Email validation starts

  // const [email1, setEmail1] = useState("");
  const [message, setMessage] = useState("");

  const emailValidation = () => {
    const regEx = /^([a-zA-Z0-9\.-_]+)@([a-z0-9-]+).([a-z]{2,8})(.[a-z]{2,8})$/;
    if (!regEx.test(email) && email !== "") {
      setMessage("Enter valid Email Id");
    } else {
      setMessage("");
    }
  };
  const handleOnChange = (e: any) => {
    setEmail(e.target.value);
  };

  //For Email validation ends

  return (
    <div className="">
      {/* <Toaster position="bottom-center" /> */}

      <Head>
        <title>Merchant OnBoarding</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      {/* <div className={styles.container_width}> */}
      <section className={styles.SectionBox}>
        <div className={styles.imgBx}>
          {/* <img
            src="/omratrade/leftsignin.png"
            width={800}
            height={800}
            // priority={true}
            alt="girl"
            onClick={() => router.push(`/`)}
          /> */}
        </div>
        <div className={styles.loginbottom}>
          <div className={styles.contentBx}>
            <div className={styles.formBx}>
              <h2 className={styles.midHeading}>Thanks!</h2>
              <h4 className={styles.checkmail}>Check your email</h4>
              <p className={styles.forgottext}>
                Hi Merchant! Your verification code has been sent to the
                following email address:
              </p>
              <div className={styles.buttonemail}>
                <div>
                  <h5>test@gmail.com </h5>
                </div>
                <div className={styles.forgotlinks}>
                  <Link href="">Edit</Link>
                </div>
              </div>
              <p className={styles.forgottext}>
                Enter the code below to verify your email and reset your
                Password
              </p>
              <form onSubmit={handleLogin}>
                <OtpNumber />
                <span className={styles.forgotlinks}>
                  <Link href="">Resend verification code</Link>
                </span>
                <div onClick={() => router.push(`/createnewpassword`)}>
                  <input
                    type="submit"
                    value="Confirm & Continue"
                    name=""
                    className={styles.buttonsection}
                  />
                </div>
              </form>
              <p className={styles.forgottext}>
                Did not receive the email? Check your spam filter.
              </p>
            </div>
          </div>
          <div onClick={() => router.push(`/`)} className={styles.backtohome}>
            <Cancel />
          </div>
        </div>
      </section>
      {/* </div> */}
    </div>
  );
};

export default OtpPage;
